name: sapling-action
author: Shikanime Studio
branding:
  icon: globe
  color: gray-dark
description: Land a pull request
inputs:
  token:
    description: The GitHub Token
    required: false
    default: ${{ github.token }}
  base:
    description: The base branch to rebase onto
    default: main
  reaction:
    description: The reaction to add
    default: rocket
  permissions:
    description: The permissions to check
    default: write,maintain,admin
  username:
    description: The username to use
    default: github-actions[bot]
  email:
    description: The email to use
    default: github-actions[bot]@users.noreply.github.com
  sign-commits:
    description: Set to true if the action should sign the commit with GPG
    default: "false"
  gpg-private-key:
    description: GPG Private Key with which to sign the commits in the PR to be created
    default: ""
  gpg-passphrase:
    description: GPG Private Key Passphrase for the GPG Private Key with which to sign the commits in the PR to be created
    default: ""
runs:
  using: composite
  steps:
    - uses: github/command@v1
      id: commandLand
      with:
        command: .land
        reaction: ${{ inputs.reaction }}
        allowed_contexts: pull_request
        permissions: ${{ inputs.permissions }}
        github_token: ${{ inputs.token }}
    - uses: github/command@v1
      id: commandRebase
      with:
        command: .rebase
        reaction: ${{ inputs.reaction }}
        allowed_contexts: pull_request
        permissions: ${{ inputs.permissions }}
        github_token: ${{ inputs.token }}
    - uses: github/command@v1
      id: commandClose
      with:
        command: .close
        reaction: ${{ inputs.reaction }}
        allowed_contexts: pull_request
        permissions: ${{ inputs.permissions }}
        github_token: ${{ inputs.token }}
        skip_ci: "true"

    - uses: shikanime-studio/setup-sapling-action@v1
      with:
        username: ${{ inputs.username }}
        email: ${{ inputs.email }}
        sign-commits: ${{ inputs.sign-commits }}
        gpg-private-key: ${{ inputs.gpg-private-key }}
        gpg-passphrase: ${{ inputs.gpg-passphrase }}
      if: |
        steps.commandLand.outputs.continue == 'true' ||
        steps.commandRebase.outputs.continue == 'true' ||
        steps.commandClose.outputs.continue == 'true'

    - name: Land Pull Request
      shell: bash
      run: |
        if [ "${{ steps.commandLand.outputs.params }}" == "ghstack" ] || \
           [ -z "${{ steps.commandLand.outputs.params }}" ]; then
          nix run nixpkgs#sapling -- ghstack land \
            ${{ github.event.issue.pull_request.html_url }}
        elif [ "${{ steps.commandLand.outputs.params }}" == "pr" ]; then
          nix run nixpkgs#sapling -- pr pull \
            --goto \
            ${{ github.event.issue.pull_request.html_url }}
          nix run nixpkgs#sapling -- rebase \
            --dest ${{ inputs.base }}
          nix run nixpkgs#sapling -- push \
            --to ${{ inputs.base }}
          nix run nixpkgs#sapling -- push \
            --delete $(
              gh pr view \
                ${{ github.event.issue.pull_request.html_url }} \
                --json headRefName \
                -q .headRefName
            )
        fi
      if: steps.commandLand.outputs.continue == 'true'
      env:
        GH_TOKEN: ${{ inputs.token }}

    - name: Rebase Pull Request
      shell: bash
      run: |
        if [ "${{ steps.commandRebase.outputs.params }}" == "ghstack" ] || \
           [ -z "${{ steps.commandRebase.outputs.params }}" ]; then
          nix run nixpkgs#sapling -- ghstack checkout \
            ${{ github.event.issue.pull_request.html_url }}
          nix run nixpkgs#sapling -- rebase \
            --dest ${{ inputs.base }}
          nix run nixpkgs#sapling -- ghstack submit
        elif [ "${{ steps.commandRebase.outputs.params }}" == "pr" ]; then
          nix run nixpkgs#sapling -- pr checkout \
            --goto \
            ${{ github.event.issue.pull_request.html_url }}
          nix run nixpkgs#sapling -- rebase \
            --dest ${{ inputs.base }}
          nix run nixpkgs#sapling -- pr submit
        fi
      if: steps.commandRebase.outputs.continue == 'true'
      env:
        GH_TOKEN: ${{ inputs.token }}

    - name: Close Pull Request
      shell: bash
      run: |
        if [ "${{ steps.commandClose.outputs.params }}" == "ghstack" ] || \
           [ -z "${{ steps.commandClose.outputs.params }}" ]; then
          nix run nixpkgs#sapling -- ghstack action \
            --close \
            ${{ github.event.issue.pull_request.html_url }}
        elif [ "${{ steps.commandClose.outputs.params }}" == "pr" ]; then
          nix run nixpkgs#gh -- pr close \
            --delete-branch \
            ${{ github.event.issue.pull_request.html_url }}
        fi
      if: steps.commandClose.outputs.continue == 'true'
      env:
        GH_TOKEN: ${{ inputs.token }}
